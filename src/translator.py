import re
import os
import shutil

def clean_folder(folder):
    for filename in os.listdir(folder):
        file_path = os.path.join(folder, filename)
        try:
            if os.path.isfile(file_path) or os.path.islink(file_path):
                os.unlink(file_path)
            elif os.path.isdir(file_path):
                shutil.rmtree(file_path)
        except Exception as e:
            print('Failed to delete %s. Reason: %s' % (file_path, e))

def translate_file(input_filename):
    path, input_name = os.path.split(input_filename)
    subpath, input_ext = os.path.splitext(input_name)
    with open(input_filename, 'r') as input_file:
        content = input_file.read()

    clean = False
    if content[:5] == 'clean':
        clean = True

    pattern = re.compile(r'def\s+(\S+)\s*begin(.*?)end', re.DOTALL)
    matches = pattern.findall(content)

    if clean == True and os.path.exists(os.path.join(path, subpath)):
        clean_folder(os.path.join(path, subpath))

    for match in matches:
        output_filename, block_content = match

        block_content = re.sub(r'^[ \t]+', '', block_content, flags=re.MULTILINE)

        output_filename = re.sub(r'[^\w\s.-]', '', output_filename)
        if output_filename == '__main__':
            output_filename = subpath
            outpath = path
        else:
            outpath = os.path.join(path, subpath)
        output_filename = os.path.join(outpath, output_filename + '.mcfunction')

        if not (os.path.exists(os.path.dirname(output_filename)) or os.path.dirname(output_filename) == ''):
            os.makedirs(os.path.dirname(output_filename), exist_ok=True)

        with open(output_filename, 'w') as output_file:
            output_file.write('# Autogenerated from .mce file by MCE Translator\n')
            output_file.write(block_content.strip())
            output_file.write('\n')